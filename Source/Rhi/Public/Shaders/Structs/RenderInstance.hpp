#pragma once

#include <Shaders/EngineShader.hpp>

namespace Ame::Rhi
{
    /*
    #ifndef STRUCT_RENDERINSTANCE
    #define STRUCT_RENDERINSTANCE
    struct RenderInstance{uint TransformId;uint BoundingId;uint PositionOffset;uint NormalOffset;uint TexCoordOffset;uint TangentOffset;uint IndexOffset;uint IndexCount;uint Code;};
    #endif
    */
    class StructRenderInstanceShader : public EngineShader
    {
    private:
        // clang-format off
        static constexpr const uint8_t c_SourceCode[] {
            0x1F, 0x8B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x75, 0x8F, 0xCD, 0x0A, 0xC2, 0x30, 
            0x10, 0x84, 0xEF, 0x82, 0xEF, 0x50, 0xE8, 0x63, 0xF4, 0xA4, 0xB1, 0x87, 0x5C, 0xA2, 0xA4, 0xF1, 
            0x2C, 0xA1, 0xD9, 0xC8, 0x82, 0xEE, 0x42, 0xB2, 0x85, 0x82, 0xF8, 0xEE, 0x2E, 0xFE, 0x40, 0x45, 
            0x3C, 0xCE, 0x37, 0xCB, 0xCE, 0x4C, 0x8B, 0x99, 0x12, 0xE4, 0x66, 0x08, 0xFE, 0x68, 0xC2, 0xC9, 
            0xF7, 0x6E, 0xD7, 0x7B, 0xEB, 0x86, 0xB0, 0x71, 0xA6, 0x5F, 0xAF, 0x5A, 0xF5, 0x90, 0xE0, 0x9F, 
            0x5D, 0xA5, 0x4C, 0xA3, 0x34, 0x1E, 0xF4, 0x47, 0xB1, 0x54, 0x25, 0xD2, 0x08, 0xB7, 0x09, 0x49, 
            0x9A, 0x50, 0x22, 0xD5, 0xCC, 0xE5, 0x6A, 0x53, 0xF7, 0x04, 0x5B, 0x9E, 0x28, 0x21, 0x9D, 0x3F, 
            0xFA, 0xC0, 0x15, 0x05, 0x99, 0xF6, 0x39, 0x57, 0x90, 0x17, 0x73, 0x7A, 0x1F, 0x2F, 0x4B, 0x12, 
            0x60, 0x36, 0xCC, 0x25, 0x7D, 0xB1, 0x48, 0x67, 0x20, 0x59, 0x22, 0xAB, 0x05, 0xE6, 0x1F, 0x60, 
            0x34, 0xF2, 0xAD, 0x0D, 0x27, 0xE8, 0xEE, 0x9D, 0x2E, 0xD2, 0xAE, 0x98, 0x1F, 0x84, 0xDF, 0x59, 
            0xF3, 0xF7, 0x00, 0x00, 0x00
        };
        // clang-format on

    public:
        static constexpr const char* Name = "Structs/RenderInstance.hlsli";

        StructRenderInstanceShader()
        {
            SetupCompressed({ "Struct RenderInstance", Dg::SHADER_TYPE_UNKNOWN }, c_SourceCode);
        }
    };
} // namespace Ame::Rhi