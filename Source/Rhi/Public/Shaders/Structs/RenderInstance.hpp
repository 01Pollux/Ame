#pragma once

#include <Shaders/EngineShader.hpp>

namespace Ame::Rhi
{
    /*
    #ifndef STRUCT_RENDERINSTANCE
    #define STRUCT_RENDERINSTANCE
    struct RenderInstance{uint TransformId;uint BoundingId;uint Code;};
    #endif
    */
    class StructRenderInstanceShader : public EngineShader
    {
    private:
        // clang-format off
        static constexpr const uint8_t c_SourceCode[] {
            0x1F, 0x8B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x53, 0xCE, 0x4C, 0xCB, 0x4B, 0x49, 
            0x4D, 0x53, 0x08, 0x0E, 0x09, 0x0A, 0x75, 0x0E, 0x89, 0x0F, 0x72, 0xF5, 0x73, 0x71, 0x0D, 0xF2, 
            0xF4, 0x0B, 0x0E, 0x71, 0xF4, 0x73, 0x76, 0xE5, 0xE5, 0x52, 0x06, 0xCA, 0x65, 0xE6, 0xA5, 0xE2, 
            0x92, 0x2E, 0x2E, 0x29, 0x2A, 0x4D, 0x2E, 0x51, 0x08, 0x4A, 0x05, 0x9A, 0x51, 0xE4, 0x99, 0x57, 
            0x5C, 0x92, 0x98, 0x97, 0x9C, 0x5A, 0x5D, 0x9A, 0x99, 0x57, 0xA2, 0x10, 0x52, 0x94, 0x98, 0x57, 
            0x9C, 0x96, 0x5F, 0x94, 0xEB, 0x99, 0x62, 0x0D, 0x16, 0x70, 0xCA, 0x2F, 0xCD, 0x4B, 0xC9, 0xCC, 
            0x4B, 0x87, 0xF1, 0x9D, 0xF3, 0x53, 0x52, 0xAD, 0x6B, 0xAD, 0x81, 0x76, 0x00, 0x75, 0x67, 0xA6, 
            0x01, 0x00, 0x4C, 0xED, 0xC7, 0xCF, 0x89, 0x00, 0x00, 0x00
        };
        // clang-format on

    public:
        static constexpr const char* Name = "Structs/RenderInstance.hlsli";

        StructRenderInstanceShader()
        {
            SetupCompressed({ "S_RenderInstance", Dg::SHADER_TYPE_UNKNOWN }, c_SourceCode);
        }
    };
} // namespace Ame::Rhi