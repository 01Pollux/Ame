#pragma once

#include <Shaders/EngineShader.hpp>

namespace Ame::Rhi
{
    /*
    #ifndef STRUCT_TRANSFORM
    #define STRUCT_TRANSFORM
    struct Transform{float4x4 World;};
    #endif
    */
    class StructTransformShader : public EngineShader
    {
    private:
        // clang-format off
        static constexpr const uint8_t c_SourceCode[] {
            0x1F, 0x8B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x53, 0xCE, 0x4C, 0xCB, 0x4B, 0x49, 
            0x4D, 0x53, 0x08, 0x0E, 0x09, 0x0A, 0x75, 0x0E, 0x89, 0x0F, 0x09, 0x72, 0xF4, 0x0B, 0x76, 0xF3, 
            0x0F, 0xF2, 0xE5, 0xE5, 0x52, 0x06, 0x0A, 0x67, 0xE6, 0xA5, 0x62, 0x91, 0x29, 0x2E, 0x29, 0x2A, 
            0x4D, 0x2E, 0x51, 0x08, 0x29, 0x4A, 0xCC, 0x2B, 0x4E, 0xCB, 0x2F, 0xCA, 0xAD, 0x4E, 0xCB, 0xC9, 
            0x4F, 0x2C, 0x31, 0xA9, 0x30, 0x51, 0x08, 0xCF, 0x2F, 0xCA, 0x49, 0xB1, 0xAE, 0xB5, 0x06, 0xEA, 
            0x4E, 0xCD, 0x4B, 0xC9, 0x4C, 0x03, 0x00, 0x8E, 0xC5, 0xA5, 0x74, 0x5E, 0x00, 0x00, 0x00
        };
        // clang-format on

    public:
        static constexpr const char* Name = "Structs/Transform.hlsli";

        StructTransformShader()
        {
            SetupCompressed({ "Struct Transform", Dg::SHADER_TYPE_UNKNOWN }, c_SourceCode);
        }
    };
} // namespace Ame::Rhi