#pragma once

#include <Shaders/EngineShader.hpp>

namespace Ame::Rhi
{
    /*
    #ifndef STRUCT_DRAWINDEXEDINDIRECTCOMMAND
    #define STRUCT_DRAWINDEXEDINDIRECTCOMMAND
    struct DrawIndexedIndirectCommand{uint NumIndices;uint NumInstances;uint FirstIndexLocation;uint BaseVertex;uint FirstInstanceLocation;};
    #endif
    */
    class StructDrawIndexedIndirectCommandShader : public EngineShader
    {
    private:
        // clang-format off
        static constexpr const uint8_t c_SourceCode[] {
            0x1F, 0x8B, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x53, 0xCE, 0x4C, 0xCB, 0x4B, 0x49, 
            0x4D, 0x53, 0x08, 0x0E, 0x09, 0x0A, 0x75, 0x0E, 0x89, 0x77, 0x09, 0x72, 0x0C, 0xF7, 0xF4, 0x73, 
            0x71, 0x8D, 0x70, 0x75, 0x01, 0x52, 0x9E, 0x41, 0xAE, 0xCE, 0x21, 0xCE, 0xFE, 0xBE, 0xBE, 0x8E, 
            0x7E, 0x2E, 0xBC, 0x5C, 0xCA, 0x40, 0x75, 0x99, 0x79, 0xA9, 0xC4, 0x28, 0x2D, 0x2E, 0x29, 0x2A, 
            0x4D, 0x2E, 0x51, 0x70, 0x29, 0x4A, 0x2C, 0xF7, 0x04, 0x1A, 0x5F, 0x91, 0x9A, 0x02, 0xA4, 0x32, 
            0x8B, 0x52, 0x93, 0x4B, 0x9C, 0xF3, 0x73, 0x73, 0x13, 0xF3, 0x52, 0xAA, 0x4B, 0x33, 0xF3, 0x4A, 
            0x14, 0xFC, 0x4A, 0x73, 0x41, 0xE2, 0xC9, 0xA9, 0xC5, 0xD6, 0x08, 0x7E, 0x71, 0x49, 0x62, 0x1E, 
            0x5C, 0xC4, 0x2D, 0xB3, 0xA8, 0xB8, 0x04, 0x6C, 0x84, 0x4F, 0x7E, 0x72, 0x62, 0x49, 0x66, 0x7E, 
            0x1E, 0x44, 0xDC, 0x29, 0xB1, 0x38, 0x35, 0x2C, 0xB5, 0xA8, 0x24, 0xB5, 0x02, 0x45, 0x1D, 0x44, 
            0x2F, 0x5C, 0x69, 0xAD, 0x35, 0xD0, 0xD5, 0xA9, 0x40, 0x1B, 0xD2, 0x00, 0x72, 0x24, 0xB7, 0x63, 
            0xE7, 0x00, 0x00, 0x00
        };
        // clang-format on

    public:
        static constexpr const char* Name = "Structs/DrawIndexedIndirectCommand.hlsli";

        StructDrawIndexedIndirectCommandShader()
        {
            SetupCompressed({ "Struct DrawIndexedIndirectCommand", Dg::SHADER_TYPE_VERTEX }, c_SourceCode);
        }
    };
} // namespace Ame::Rhi